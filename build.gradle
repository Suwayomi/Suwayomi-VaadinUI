import org.panteleyev.jpackage.ImageType
import org.panteleyev.jpackage.JPackageTask
import org.springframework.boot.gradle.tasks.bundling.BootJar
import org.springframework.boot.gradle.tasks.run.BootRun

plugins {
    id 'java'
    id 'idea'
    id 'org.springframework.boot' version '3.3.0'
    id 'io.spring.dependency-management' version '1.1.5'
    //id 'org.graalvm.buildtools.native' version '0.9.20'
    id 'com.vaadin' version '24.4.1'

    //Jpackage for building native installers
    id("org.panteleyev.jpackageplugin") version "1.6.0"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
        vendor = JvmVendorSpec.BELLSOFT
    }
}

group = 'online.hatsunemiku'
version = '1.10.0'
sourceCompatibility = JavaVersion.VERSION_21
targetCompatibility = JavaVersion.VERSION_21

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven {
        name = "Vaadin Addons"
        url = "https://maven.vaadin.com/vaadin-addons"
    }
}

ext {
    set('vaadinVersion', "24.4.1")
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation('org.springframework.boot:spring-boot-starter-webflux')
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-graphql'
    implementation('com.vaadin:vaadin-spring-boot-starter') {
        if (vaadin.productionMode) {
            exclude group: "com.vaadin", module: "vaadin-dev-server"
        }
    }
    //databind
    implementation ("com.fasterxml.jackson.core:jackson-databind") {
        version {
            strictly '2.17.1'
        }
    }

    implementation('com.fasterxml.jackson.module:jackson-module-kotlin') {
        version {
            strictly '2.17.1'
        }
    }

    implementation('com.fasterxml.jackson.core:jackson-core') {
        version {
            strictly '2.17.1'
        }
    }

    implementation 'org.jetbrains:annotations:24.0.0'
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.5'

    //MAL API
    implementation 'dev.katsute:mal4j:3.4.2'

    //GraphQL
    implementation "com.netflix.graphql.dgs:graphql-dgs-spring-boot-starter"

    //Apache Commons codec -> used for URL encoding
    implementation 'commons-codec:commons-codec:1.16.1'


    implementation 'pl.unforgiven:superfields:0.18.3'
    implementation 'com.squareup.okhttp3:okhttp:4.11.0'
    implementation 'commons-validator:commons-validator:1.7'


    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    developmentOnly 'io.projectreactor:reactor-tools'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'


    //vaadin directory plugins
    implementation 'in.virit:viritin:2.0.1'
    implementation 'org.vaadin.addons.online.hatsunemiku.diamond:FlowSwiper:1.3.1'
}

dependencyManagement {
    imports {
        mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
        mavenBom "com.netflix.graphql.dgs:graphql-dgs-platform-dependencies:9.0.0"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.register('runDebug', BootRun) {

    dependsOn('vaadinBuildFrontend')

    group = 'application'
    systemProperty 'spring.profiles.active', 'dev'
    mainClass = 'online.hatsunemiku.tachideskvaadinui.TachideskVaadinUiApplication'
    classpath(sourceSets.main.runtimeClasspath)
}


//new task to build bootJar
tasks.register('buildReleaseJar', BootJar) {
    group = 'build'

    dependsOn('vaadinBuildFrontend')
    enabled = true
    vaadin.productionMode = true
    archiveFileName = "Tachidesk-VaadinUI-${version}.jar"
    mainClass = 'online.hatsunemiku.tachideskvaadinui.TachideskVaadinUiApplication'
    setTargetJavaVersion(targetCompatibility)

    //fat jar
    classpath(sourceSets.main.runtimeClasspath)

    launchScript()
}

tasks.register('buildWindowsMsi', WindowsInstallTask) {
    type = ImageType.MSI
}

tasks.register('buildWindowsExe', WindowsInstallTask) {
    type = ImageType.EXE
}

tasks.register('buildLinuxDeb', LinuxInstallTask) {
    type = ImageType.DEB
}

tasks.register('buildLinuxRpm', LinuxInstallTask) {
    type = ImageType.RPM
}

tasks.register('buildMacDmg', MacInstallTask) {
    type = ImageType.DMG
}

tasks.register('buildMacPkg', MacInstallTask) {
    type = ImageType.PKG
}

class InstallTask extends JPackageTask {
    InstallTask() {
        super()
        dependsOn('buildReleaseJar')
        group = 'installers'
        enabled = true

        aboutUrl = "https://github.com/aless2003/Tachidesk-VaadinUI"
        appDescription = "A simple Web UI for Tachidesk written in Java with Vaadin"
        appName = "Tachidesk Vaadin UI"
        appVersion = "${project.version}"
        icon = "package/icons/icon.ico"
        licenseFile = "LICENSE"
        mainClass = "org.springframework.boot.loader.launch.JarLauncher"
        mainJar = "Tachidesk-VaadinUI-${project.version}.jar"
        vendor = "Aless2003"
        verbose = false
        input = "build/libs"
        destination = "build/installer"
    }
}

class WindowsInstallTask extends InstallTask {

    //inject annotation with full qualified class name
    WindowsInstallTask() {
        super()

        //winConsole = true //enable only for debugging
        winDirChooser = true
        winHelpUrl = "https://github.com/aless2003/Tachidesk-VaadinUI"
        winMenu = true
        winMenuGroup = "DiamondMiku"
        winPerUserInstall = true
        winShortcut = true
        winShortcutPrompt = true
        winUpdateUrl = "https://github.com/aless2003/Tachidesk-VaadinUI"
        winUpgradeUuid = "1fd89884-c606-4304-b9f0-f82c47ff7676"
    }
}

class LinuxInstallTask extends InstallTask {
    LinuxInstallTask() {
        super()
        linuxAppCategory = "Utility"
        linuxDebMaintainer = "Alessandro.Schwaiger12@gmail.com"
        linuxMenuGroup = "DiamondMiku"
        linuxPackageName = "tachidesk-vaaui"
        linuxRpmLicenseType = "MPLv2.0"
        linuxShortcut = true
    }
}

class MacInstallTask extends InstallTask {
    MacInstallTask() {
        super()
        if (project.version.startsWith("0.")) {
            appVersion = project.version.replaceFirst("0.", "1.")
        } else {
            appVersion = project.version
        }
        macAppCategory = "public.app-category.books"
        macAppStore = false
        macPackageIdentifier = "online.hatsunemiku.tachideskvaadinui"
        macPackageName = "Tachidesk-VaadinUI"
    }
}
