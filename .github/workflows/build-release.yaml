# This is used to build a release for each platform - Windows, Linux, and macOS.
# Each platform has multiple installers/packages (e.g. Windows has .exe and .msi).
# To Build one gradle is used via the build{OS}{Installer} task. (e.g. buildWindowsExe)

name: Build Release

on:
  push:
    branches:
      - actions
  workflow_dispatch:

jobs:
  BuildRelease:
    strategy:
      matrix:
        OS: [Windows, Linux, macOS]
        INSTALLER: [Exe, Msi, Deb, Dmg, Pkg, Rpm]
        include:
          - OS: Windows
            INSTALLER: Exe
            RUNTIME: windows-latest
          - OS: Windows
            INSTALLER: Msi
            RUNTIME: windows-latest
          - OS: Linux
            INSTALLER: Deb
            RUNTIME: ubuntu-latest
          - OS: Linux
            INSTALLER: Rpm
            RUNTIME: ubuntu-latest
          - OS: macOS
            INSTALLER: Dmg
            RUNTIME: macos-latest
          - OS: macOS
            INSTALLER: Pkg
            RUNTIME: macos-latest
    runs-on: ${{ matrix.RUNTIME }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17

        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'liberica'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build Release
        run: ./gradlew build${{ matrix.OS }}${{ matrix.INSTALLER }}
      - name: List files
        run: ls -R ${{ github.workspace }}/build/installer
      - name: Upload Release
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.gradle_task }}
          path: ${{ github.workspace }}/build/installer/*
          if-no-files-found: error
          retention-days: 14