# This is used to build a release for each platform - Windows, Linux, and macOS.
# Each platform has multiple installers/packages (e.g. Windows has .exe and .msi).
# To Build one gradle is used via the build{OS}{Installer} task. (e.g. buildWindowsExe)

name: Build Release

on:
  push:
    branches:
      - actions
  workflow_dispatch:

jobs:
  build-release:
    name: ${{ matrix.gradle_task }} for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ macos-latest, windows-latest, ubuntu-latest ]
        type: [Dmg, Pkg, Exe, Msi, Deb, Rpm]
        include:
          - os: macos-latest
            type: Dmg
            gradle_task: buildMacDmg
          - os: macos-latest
            type: Pkg
            gradle_task: buildMacPkg
          - os: windows-latest
            type: Exe
            gradle_task: buildWindowsExe
          - os: windows-latest
            type: Msi
            gradle_task: buildWindowsMsi
          - os: ubuntu-latest
            type: Deb
            gradle_task: buildLinuxDeb
          - os: ubuntu-latest
            type: Rpm
            gradle_task: buildLinuxRpm
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17

        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'liberica'
          cache: gradle
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build Release
        run: ./gradlew ${{ matrix.gradle_task }}
      - name: List files
        run: ls -R ${{ github.workspace }}/build/installer
      - name: Upload Release
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.gradle_task }}
          path: ${{ github.workspace }}/build/installer/*
          if-no-files-found: error
          retention-days: 14